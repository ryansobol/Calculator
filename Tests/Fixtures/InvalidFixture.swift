@testable import ChanceKit

typealias InvalidFixture = (
  lexeme: String,
  error: ExpressionError
)

let invalidFixtures: [InvalidFixture] = [
  (lexeme: "d", error: .invalidLexeme("d")),
  (lexeme: "-d", error: .invalidLexeme("-d")),
  (lexeme: "d-", error: .invalidLexeme("d-")),
  (lexeme: "-d-", error: .invalidLexeme("-d-")),
  (lexeme: "+d", error: .invalidLexeme("+d")),
  (lexeme: "d+", error: .invalidLexeme("d+")),
  (lexeme: "+d+", error: .invalidLexeme("+d+")),
  (lexeme: "d0", error: .invalidLexeme("d0")),
  (lexeme: "d1", error: .invalidLexeme("d1")),
  (lexeme: "d9", error: .invalidLexeme("d9")),
  (lexeme: "d-0", error: .invalidLexeme("d-0")),
  (lexeme: "d-1", error: .invalidLexeme("d-1")),
  (lexeme: "d-9", error: .invalidLexeme("d-9")),
  (lexeme: "-d0", error: .invalidLexeme("-d0")),
  (lexeme: "-d1", error: .invalidLexeme("-d1")),
  (lexeme: "-d9", error: .invalidLexeme("-d9")),
  (lexeme: "d+0", error: .invalidLexeme("d+0")),
  (lexeme: "d+1", error: .invalidLexeme("d+1")),
  (lexeme: "d+9", error: .invalidLexeme("d+9")),
  (lexeme: "+d0", error: .invalidLexeme("+d0")),
  (lexeme: "+d1", error: .invalidLexeme("+d1")),
  (lexeme: "+d9", error: .invalidLexeme("+d9")),
  (lexeme: "+d-0", error: .invalidLexeme("+d-0")),
  (lexeme: "+d-1", error: .invalidLexeme("+d-1")),
  (lexeme: "+d-9", error: .invalidLexeme("+d-9")),
  (lexeme: "+d+0", error: .invalidLexeme("+d+0")),
  (lexeme: "+d+1", error: .invalidLexeme("+d+1")),
  (lexeme: "+d+9", error: .invalidLexeme("+d+9")),
  (lexeme: "0d+", error: .invalidLexeme("0d+")),
  (lexeme: "1d+", error: .invalidLexeme("1d+")),
  (lexeme: "9d+", error: .invalidLexeme("9d+")),
  (lexeme: "-0d+", error: .invalidLexeme("-0d+")),
  (lexeme: "-1d+", error: .invalidLexeme("-1d+")),
  (lexeme: "-9d+", error: .invalidLexeme("-9d+")),
  (lexeme: "+0d+", error: .invalidLexeme("+0d+")),
  (lexeme: "+1d+", error: .invalidLexeme("+1d+")),
  (lexeme: "+9d+", error: .invalidLexeme("+9d+")),
  (lexeme: "0d0\n1d1", error: .invalidLexeme("0d0\n1d1")),
  (lexeme: "=", error: .invalidLexeme("=")),
  (lexeme: "[", error: .invalidLexeme("[")),
  (lexeme: "]", error: .invalidLexeme("]")),
  (lexeme: "{", error: .invalidLexeme("{")),
  (lexeme: "}", error: .invalidLexeme("}")),
  (lexeme: "<", error: .invalidLexeme("<")),
  (lexeme: ">", error: .invalidLexeme(">")),
  (lexeme: ".", error: .invalidLexeme(".")),
  (lexeme: ",", error: .invalidLexeme(",")),
  (lexeme: "**", error: .invalidLexeme("**")),
  (lexeme: "&", error: .invalidLexeme("&")),
  (lexeme: "|", error: .invalidLexeme("|")),
  (lexeme: "!", error: .invalidLexeme("!")),
  (lexeme: "~", error: .invalidLexeme("~")),
  (lexeme: "..<", error: .invalidLexeme("..<")),
  (lexeme: "...", error: .invalidLexeme("...")),
  (lexeme: "<<", error: .invalidLexeme("<<")),
  (lexeme: ">>", error: .invalidLexeme(">>")),
  (lexeme: "%", error: .invalidLexeme("%")),
]
